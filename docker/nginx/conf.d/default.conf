# After modifying this file, run the following command to test the configuration:
#   scp default.conf deployer@[IP_SERVER]:/etc/nginx/sites-available/default.conf
# Then, create a symlink to enable the site:
#   sudo ln -s /etc/nginx/sites-available/default.conf /etc/nginx/sites-enabled/
# Finally, test the configuration and reload Nginx:
#   sudo nginx -t
#   sudo systemctl reload nginx
# To generate the SSL certificates, use Certbot:
#   certbot --nginx -d mlorente.dev -d www.mlorente.dev -d staging.mlorente.dev -d www.staging.mlorente.dev
# To enable automatic renewal of the SSL certificates, add a cron job:
#   crontab -e
#   0 0 * * * certbot renew && systemctl reload nginx

# Redirigir HTTP a HTTPS
server {
    listen 80;
    server_name mlorente.dev www.mlorente.dev;

    location / {
        return 301 https://$host$request_uri;
    }

    # Let's Encrypt verification
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
}

# Redirección HTTP a HTTPS para staging
server {
    listen 80;
    server_name staging.mlorente.dev www.staging.mlorente.dev;

    location / {
        return 301 https://$host$request_uri;
    }

    # Let's Encrypt verification
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
}

# Configuración para PRODUCCIÓN
server {
    listen 443 ssl;
    server_name mlorente.dev www.mlorente.dev;

    # SSL Configuración
    ssl_certificate /etc/letsencrypt/live/mlorente.dev/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mlorente.dev/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/mlorente.dev/chain.pem;

    # Seguridad SSL
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384";
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    # HSTS
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    # Compresión GZIP
    gzip on;
    gzip_comp_level 5;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_vary on;
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;

    # Configuración del sitio estático
    root /opt/mlorente;
    index index.html;
    
    location / {
        try_files $uri /index.html;
    }

    # Cache de archivos estáticos
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|webp)$ {
        expires 7d;
        add_header Cache-Control "public";
    }

    # Páginas de error personalizadas
    error_page 404 /404.html;
    error_page 500 502 503 504 /500.html;
}

# Configuración para STAGING
server {
    listen 443 ssl;
    server_name staging.mlorente.dev www.staging.mlorente.dev;
    
    # SSL para staging
    ssl_certificate /etc/letsencrypt/live/staging.mlorente.dev/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/staging.mlorente.dev/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/staging.mlorente.dev/chain.pem;

    # Mismas configuraciones de seguridad SSL
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384";
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    # HSTS
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # Añadir banner de entorno de staging
    add_header X-Environment "Staging";

    # Misma configuración GZIP
    gzip on;
    gzip_comp_level 5;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_vary on;
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;


    # Frontend para staging
    location / {
        proxy_pass http://frontend:4321;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # API para staging
    location /api/ {
        proxy_pass http://backend:8080/api/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Health check para staging
    location = /health {
        proxy_pass http://backend:8080/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }
    
    root /opt/mlorente-staging;
    index index.html;
    
    location / {
        try_files $uri /index.html;
    }

    # Cacheo de assets estáticos para staging
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|webp)$ {
        proxy_pass http://frontend:4321;
        proxy_http_version 1.1;
        proxy_set_header Host $host;        
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        expires 7d;
        add_header Cache-Control "public";
    }

    # Páginas de error
    error_page 404 /404;
    error_page 500 502 503 504 /500;
}
