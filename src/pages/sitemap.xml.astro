---
import { getCollection } from 'astro:content';
import { ENV } from '../config/env';

function formatDate(date: Date) {
  return date.toISOString();
}

const regularPages = [
  { url: '/', lastMod: new Date(), priority: '1.0' },
  { url: '/about/', lastMod: new Date(), priority: '0.8' },
  { url: '/projects/', lastMod: new Date(), priority: '0.8' },
  { url: '/contact/', lastMod: new Date(), priority: '0.8' },
];

const projects = await getCollection('projects');
const resources = await getCollection('resources');

const projectUrls = projects.map((project) => ({
  url: `/projects/${project.id}/`,
  lastMod: new Date(project.data.pubDate),
  priority: '0.8',
}));

const resourceUrls = resources.map((resource) => ({
  url: `/resources/${resource.slug}/`,
  lastMod: new Date(resource.data.pubDate),
  priority: '0.8',
}));

const allUrls = [...regularPages, ...projectUrls, ...resourceUrls];
const siteUrl = ENV.SITE.URL;

Astro.response.headers.set('Content-Type', 'application/xml');
---

<!--?xml version="1.0" encoding="UTF-8"?-->
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
  {
    allUrls.map((page) => {
      const fullUrl = `${siteUrl}${page.url}`;
      const lastmod = formatDate(page.lastMod);

      return (
        <url>
          <loc>{fullUrl}</loc>
          <lastmod>{lastmod}</lastmod>
          <changefreq>weekly</changefreq>
          <priority>{page.priority}</priority>
        </url>
      );
    })
  }
</urlset>
