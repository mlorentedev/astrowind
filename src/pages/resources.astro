---
// src/pages/recursos.astro
import BaseLayout from '../layouts/BaseLayout.astro';
import { RESOURCES } from './api/resource-access';
import type { Resource } from './api/types';

const title = "Recursos Gratuitos para Desarrolladores";
const description = "Colección de recursos, guías y templates gratuitos para desarrolladores cloud y DevOps";

// Add type for categories accumulator
type CategoryMap = { [key: string]: Resource[] };

// Agrupación de recursos por categoría
const resourcesByCategory = Object.values(RESOURCES).reduce<CategoryMap>((acc, resource) => {
  const category = resource.tags?.find(tag => 
    ['devops', 'cloud', 'kubernetes', 'iac', 'automation'].includes(tag)
  ) || 'other';
  
  if (!acc[category]) {
    acc[category] = [];
  }
  
  acc[category].push(resource);
  return acc;
}, {});

// Títulos amigables para las categorías
type CategoryTitles = {
  [key: string]: string;
};

const categoryTitles: CategoryTitles = {
  devops: "DevOps",
  cloud: "Cloud Computing",
  kubernetes: "Kubernetes",
  iac: "Infraestructura como Código",
  automation: "Automatización",
  other: "Otros Recursos"
};
---

<BaseLayout 
  title={title} 
  description={description}
  pubDate={new Date()}
>
  <div class="max-w-6xl mx-auto px-4 py-8">
    <h1 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4 text-center">{title}</h1>
    <p class="text-lg text-gray-700 mb-12 max-w-3xl mx-auto text-center">{description}</p>
    
    <div class="grid grid-cols-1 gap-12">
      {Object.entries(resourcesByCategory).map(([category, resources]) => (
        <section>
          <h2 class="text-2xl font-bold mb-6 border-b pb-2">{categoryTitles[category] || category}</h2>
          
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {resources.map((resource) => (
              <a 
                href={`/recursos/${resource.id}`} 
                class="bg-white rounded-lg border border-gray-200 overflow-hidden shadow-sm hover:shadow-md transition-shadow"
              >
                <div class="aspect-video bg-gray-100 relative">
                  <img 
                    src={`/img/resources/${resource.id}-thumbnail.jpg`} 
                    alt={resource.title}
                    class="w-full h-full object-cover"
                    onerror="this.src='/img/resources/default-thumbnail.jpg'"
                  />
                  
                  <div class="absolute top-0 right-0 bg-cyan-700 text-white text-xs font-bold px-2 py-1 rounded-bl">
                    Gratis
                  </div>
                </div>
                
                <div class="p-5">
                  <h3 class="font-bold text-lg mb-2 text-gray-900">{resource.title}</h3>
                  <p class="text-gray-600 text-sm mb-4">{resource.description}</p>
                  
                  <div class="flex flex-wrap gap-2">
                    {resource.tags?.filter(tag => tag !== 'lead-magnet').map(tag => (
                      <span class="inline-block bg-gray-100 text-gray-700 text-xs px-2 py-1 rounded">
                        {tag}
                      </span>
                    ))}
                  </div>
                </div>
              </a>
            ))}
          </div>
        </section>
      ))}
    </div>
    
    <div class="mt-16 bg-gray-50 rounded-lg p-8 text-center">
      <h2 class="text-2xl font-bold mb-4">¿No encuentras lo que buscas?</h2>
      <p class="text-gray-700 mb-6 max-w-2xl mx-auto">
        Si necesitas un recurso específico o tienes alguna pregunta, no dudes en contactarme.
        Estoy constantemente creando nuevos recursos para ayudar a la comunidad.
      </p>
      <a href="/contact" class="inline-block px-6 py-3 bg-cyan-700 text-white font-medium rounded-md hover:bg-cyan-800 transition-colors">
        Contactar
      </a>
    </div>
  </div>
</BaseLayout>