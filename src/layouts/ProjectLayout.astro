---
import type { CollectionEntry } from 'astro:content';
import BaseLayout from './BaseLayout.astro';

type Props = CollectionEntry<'projects'>['data'];

const { 
  title, 
  description, 
  pubDate, 
  updatedDate,
  heroImage, 
  githubRepo, 
  tags 
} = Astro.props;

const repoPath = githubRepo ? githubRepo.split('github.com/')[1] : '';
const resourceId = 'defaultResourceId';
const fileId = 'defaultFileId';
const buttonText = 'defaultButtonText';
---

<BaseLayout
  title={title}
  description={description}
  pubDate={pubDate}
  resourceId={resourceId}
  fileId={fileId}
  tags={tags || []}
  buttonText={buttonText}
>
  <article class="max-w-4xl mx-auto p-4">
    <div class="mb-4">
      <h1 class="text-4xl font-extrabold text-gray-900">{title}</h1>
      <p class="text-xl text-gray-600 mt-2">{description}</p>
      <hr class="my-4 border-gray-300" />
    </div>
    
    {githubRepo && repoPath && (
      <div class="flex flex-wrap justify-center gap-2 my-6">
        <a href={githubRepo} target="_blank" rel="noopener">
          <img src={`https://img.shields.io/github/stars/${repoPath}?style=flat-square`} alt="GitHub stars" />
        </a>
        <a href={`${githubRepo}/network/members`} target="_blank" rel="noopener">
          <img src={`https://img.shields.io/github/forks/${repoPath}?style=flat-square`} alt="GitHub forks" />
        </a>
        <a href={`${githubRepo}/issues`} target="_blank" rel="noopener">
          <img src={`https://img.shields.io/github/issues/${repoPath}?style=flat-square`} alt="GitHub issues" />
        </a>
        <a href={`${githubRepo}/blob/main/LICENSE`} target="_blank" rel="noopener">
          <img src={`https://img.shields.io/github/license/${repoPath}?style=flat-square`} alt="License" />
        </a>
      </div>
    )}
    
    <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center text-sm text-gray-600 mb-6">
      <div>
        <p>Publicado: <time datetime={pubDate.toISOString()}>{pubDate.toLocaleDateString()}</time></p>
        {updatedDate && (
          <p>Actualizado: <time datetime={updatedDate.toISOString()}>{updatedDate.toLocaleDateString()}</time></p>
        )}
      </div>
      
      {githubRepo && (
        <a href={githubRepo} target="_blank" rel="noopener" class="flex items-center text-cyan-700 hover:underline mt-2 sm:mt-0">
          <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
            <path fill-rule="evenodd" d="M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z" clip-rule="evenodd"></path>
          </svg>
          Ver en GitHub
        </a>
      )}
    </div>
    
    {tags && tags.length > 0 && (
      <div class="flex flex-wrap gap-2 mb-6">
        {tags.map(tag => (
          <span class="px-3 py-1 bg-cyan-100 text-cyan-800 rounded-full text-sm">
            {tag}
          </span>
        ))}
      </div>
    )}
    
    {heroImage && (
      <img src={heroImage} alt={title} class="w-full h-auto object-cover rounded-lg shadow-md mb-6" />
    )}
    
    <div class="prose lg:prose-xl mx-auto">
      <slot />
    </div>
  </article>
</BaseLayout>