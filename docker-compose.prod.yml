services:
  frontend:
    image: ${DOCKERHUB_USERNAME:-mlorentedev}/mlorente-frontend:${VERSION:-latest}
    restart: always
    env_file:
      - frontend/.env
    networks:
      - app-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4321/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s      

  backend:
    image: ${DOCKERHUB_USERNAME:-mlorentedev}/mlorente-backend:${VERSION:-latest}
    restart: always
    env_file:
      - backend/.env
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s      

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 60s
      timeout: 10s
      retries: 3      

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - app-network
    depends_on:
      - nginx

networks:
  app-network:
    driver: bridge

volumes:
  certbot-conf:
  certbot-www: