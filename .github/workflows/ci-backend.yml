name: Backend CI

on:
  push:
    branches: [master, develop, "feature/*", "hotfix/*"]
    paths:
      - 'backend/**'
      - '.github/workflows/ci-backend.yml'
      - 'docker/backend/**'
  pull_request:
    branches: [master, develop]
    paths:
      - 'backend/**'
      - '.github/workflows/ci-backend.yml'
      - 'docker/backend/**'

env:
  REGISTRY: docker.io
  BACKEND_IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/mlorente-backend

jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true
      
      - name: Install dependencies
        run: |
          cd backend
          go mod download
      
      - name: Run tests
        run: |
          cd backend
          go test ./... -v
      
      - name: Go vet
        run: |
          cd backend
          go vet ./...

  
  #build-backend:
  #  needs: test-backend
  #  runs-on: ubuntu-latest
  #  if: github.event_name != 'pull_request'
  #  steps:
  #    - name: Checkout code
  #      uses: actions/checkout@v3
  #    
  #    - name: Set up QEMU
  #      uses: docker/setup-qemu-action@v2
  #    
  #    - name: Set up Docker Buildx
  #      uses: docker/setup-buildx-action@v2
  #    
  #    - name: Login to DockerHub
  #      uses: docker/login-action@v2
  #      with:
  #        username: ${{ secrets.DOCKERHUB_USERNAME }}
  #        password: ${{ secrets.DOCKERHUB_TOKEN }}
  #    
  #    - name: Extract metadata
  #      id: meta
  #      run: |
  #        # Configure version and tags
  #        if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
  #          echo "VERSION=latest" >> $GITHUB_ENV
  #          echo "DEPLOY_ENV=production" >> $GITHUB_ENV
  #        elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
  #          echo "VERSION=develop" >> $GITHUB_ENV
  #          echo "DEPLOY_ENV=staging" >> $GITHUB_ENV
  #        elif [[ "${{ github.ref }}" =~ ^refs/heads/feature/.+ ]]; then
  #          # Extract feature name
  #          FEATURE_NAME=$(echo "${{ github.ref }}" | sed 's|refs/heads/feature/||')
  #          echo "VERSION=feature-${FEATURE_NAME}" >> $GITHUB_ENV
  #        elif [[ "${{ github.ref }}" =~ ^refs/heads/hotfix/.+ ]]; then
  #          # Extract hotfix name
  #          HOTFIX_NAME=$(echo "${{ github.ref }}" | sed 's|refs/heads/hotfix/||')
  #          echo "VERSION=hotfix-${HOTFIX_NAME}" >> $GITHUB_ENV
  #        else
  #          echo "VERSION=${GITHUB_SHA::8}" >> $GITHUB_ENV
  #        fi
  #    
  #    - name: Build and push backend
  #      uses: docker/build-push-action@v3
  #      with:
  #        context: .
  #        file: docker/backend/Dockerfile
  #        push: true
  #        tags: |
  #          ${{ env.BACKEND_IMAGE_NAME }}:${{ env.VERSION }}
  #          ${{ env.BACKEND_IMAGE_NAME }}:${{ github.sha }}
  #        cache-from: type=registry,ref=${{ env.BACKEND_IMAGE_NAME }}:buildcache
  #        cache-to: type=registry,ref=${{ env.BACKEND_IMAGE_NAME }}:buildcache,mode=max
  #    
  #    - name: Trigger deployment
  #      if: success() && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop')
  #      uses: peter-evans/repository-dispatch@v1
  #      with:
  #        token: ${{ secrets.REPO_ACCESS_TOKEN }}
  #        event-type: trigger-deploy
  #        client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}", "component": "backend", "env": "${{ env.DEPLOY_ENV }}", "version": "${{ env.VERSION }}"}'