name: Continuous Integration

on:
  push:
    branches:
      - master
      - 'feature/**'
      - 'hotfix/**'
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches:
      - master
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'

env:
  REGISTRY: docker.io
  BACKEND_IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/mlorente-backend

jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true
      
      - name: Install dependencies
        run: |
          cd backend
          go mod download
      
      - name: Run tests
        run: |
          cd backend
          go test ./... -v
      
      - name: Go vet
        run: |
          cd backend
          go vet ./...

  build-backend:
    needs: test-backend
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Extract branch name
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//_/g')" >> $GITHUB_ENV
      
      - name: Build and push backend
        uses: docker/build-push-action@v3
        with:
          context: .
          file: docker/backend/Dockerfile
          push: true
          tags: |
            ${{ env.BACKEND_IMAGE_NAME }}:${{ env.BRANCH_NAME }}
            ${{ env.BACKEND_IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.BACKEND_IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.BACKEND_IMAGE_NAME }}:buildcache,mode=max
      
      - name: Trigger deployment
        if: success() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          event-type: trigger-deploy
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}", "component": "backend"}'