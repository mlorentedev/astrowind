name: Continuous Integration

on:
  push:
    branches:
      - master
      - 'feature/**'
      - 'hotfix/**'
  pull_request:
    branches:
      - master

jobs:
  lint-and-type-check:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Check Astro project
        run: npm run astro check

  build-and-test:
    name: Build and Test
    needs: lint-and-type-check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build
        env:
          # Use dummy/placeholder values for CI
          BEEHIIV_API_KEY: ${{ secrets.BEEHIIV_API_KEY || 'dummy-key' }}
          BEEHIIV_PUB_ID: ${{ secrets.BEEHIIV_PUB_ID || 'dummy-pub' }}
          EMAIL_HOST: ${{ secrets.EMAIL_HOST || 'localhost' }}
          EMAIL_PORT: ${{ secrets.EMAIL_PORT || '587' }}
          EMAIL_USER: ${{ secrets.EMAIL_USER || 'test@example.com' }}
          EMAIL_PASS: ${{ secrets.EMAIL_PASS || 'dummy-pass' }}
          EMAIL_SECURE: ${{ secrets.EMAIL_SECURE || 'false' }}
          SITE_DOMAIN: ${{ secrets.SITE_DOMAIN || 'mlorente.dev' }}
          SITE_URL: ${{ secrets.SITE_URL || 'https://localhost' }}
          SITE_MAIL: ${{ secrets.SITE_MAIL || 'test@example.com' }}
          SITE_TITLE: ${{ secrets.SITE_TITLE || 'Test Site' }}
          SITE_DESCRIPTION: ${{ secrets.SITE_DESCRIPTION || 'Test Description' }}
          SITE_KEYWORDS: ${{ secrets.SITE_KEYWORDS || 'test,keywords' }}
          SITE_AUTHOR: ${{ secrets.SITE_AUTHOR || 'Test Author' }}
          CALENDLY_URL: ${{ secrets.CALENDLY_URL || 'https://calendly.com/test' }}
          TWITTER_URL: ${{ secrets.TWITTER_URL || 'https://twitter.com/test' }}
          YOUTUBE_URL: ${{ secrets.YOUTUBE_URL || 'https://youtube.com/test' }}
          GITHUB_URL: ${{ secrets.GITHUB_URL || 'https://github.com/test' }}
          GOOGLE_ANALYTICS_ID: ${{ secrets.GOOGLE_ANALYTICS_ID || 'UA-DUMMY-ID' }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.node-version }}
          path: dist
          retention-days: 7

  code-quality:
    name: Code Quality Checks
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run type coverage
        run: npx type-coverage --detail --strict

      - name: Check package security
        run: npm audit --audit-level=high

  branch-naming-check:
    name: Branch Naming Convention
    runs-on: ubuntu-latest
    steps:
      - name: Check Branch Name
        if: github.event_name == 'push'
        run: |
          BRANCH_NAME="${{ github.ref_name }}"
          if [[ ! "$BRANCH_NAME" =~ ^(master|feature/[a-z0-9-]+|hotfix/[a-z0-9-]+)$ ]]; then
            echo "Branch name '$BRANCH_NAME' does not follow the naming convention"
            echo "Allowed patterns:"
            echo "- master"
            echo "- feature/[descriptive-name]"
            echo "- hotfix/[descriptive-name]"
            exit 1
          fi

  pr-title-check:
    name: PR Title Convention
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Check PR Title
        uses: actions/github-script@v7
        with:
          script: |
            const prTitle = context.payload.pull_request.title;
            const conventionalTitlePattern = /^(feat|fix|docs|style|refactor|test|chore)(\([a-z-]+\))?:\s.+$/;
            
            if (!conventionalTitlePattern.test(prTitle)) {
              core.setFailed('PR title does not follow conventional commit format. Examples: "feat: add new feature", "fix(api): resolve authentication issue"');
            }

  dependabot-pr-check:
    name: Dependabot PR Checks
    if: github.actor == 'dependabot[bot]'
    runs-on: ubuntu-latest
    steps:
      - name: Approve Dependabot PRs
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              event: 'APPROVE'
            })